// Mocks generated by Mockito 5.4.2 from annotations
// in suji/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:connectivity_plus/connectivity_plus.dart' as _i22;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i23;
import 'package:dartz/dartz.dart' as _i2;
import 'package:geolocator/geolocator.dart' as _i13;
import 'package:isar/isar.dart' as _i25;
import 'package:mockito/mockito.dart' as _i1;
import 'package:suji/app/data/datasources/database_helper.dart' as _i24;
import 'package:suji/app/data/datasources/shalat_local_data_source.dart'
    as _i18;
import 'package:suji/app/data/datasources/shalat_remote_data_source.dart'
    as _i19;
import 'package:suji/app/data/datasources/surah_local_data_source.dart' as _i20;
import 'package:suji/app/data/datasources/surah_remote_data_source.dart'
    as _i21;
import 'package:suji/app/data/model/asmaul_husna_response.dart' as _i4;
import 'package:suji/app/data/model/daily_pray_response.dart' as _i5;
import 'package:suji/app/data/model/list_surah_response.dart' as _i6;
import 'package:suji/app/data/model/shalat_time_response.dart' as _i3;
import 'package:suji/app/data/model/surah_detail_response.dart' as _i7;
import 'package:suji/app/domain/entities/asmaul_husna.dart' as _i17;
import 'package:suji/app/domain/entities/daily_pray.dart' as _i16;
import 'package:suji/app/domain/entities/shalat.dart' as _i12;
import 'package:suji/app/domain/entities/surah.dart' as _i14;
import 'package:suji/app/domain/entities/surah_detail.dart' as _i15;
import 'package:suji/app/domain/repository/shalat_repository.dart' as _i9;
import 'package:suji/app/domain/repository/surah_repository.dart' as _i8;
import 'package:suji/app/domain/usescases/get_asmaul_husna_usecase.dart'
    as _i26;
import 'package:suji/core/utils/failure.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShalatTimeResponse_1 extends _i1.SmartFake
    implements _i3.ShalatTimeResponse {
  _FakeShalatTimeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAsmaulHusnaResponse_2 extends _i1.SmartFake
    implements _i4.AsmaulHusnaResponse {
  _FakeAsmaulHusnaResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataDailyPrayResponse_3 extends _i1.SmartFake
    implements _i5.DataDailyPrayResponse {
  _FakeDataDailyPrayResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListSurah_4 extends _i1.SmartFake implements _i6.ListSurah {
  _FakeListSurah_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailResponse_5 extends _i1.SmartFake
    implements _i7.SurahDetailResponse {
  _FakeSurahDetailResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahRepository_6 extends _i1.SmartFake
    implements _i8.SurahRepository {
  _FakeSurahRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ShalatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockShalatRepository extends _i1.Mock implements _i9.ShalatRepository {
  MockShalatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i12.Shalat>> getShalatTime(
    DateTime? dateTime,
    _i13.Position? position,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShalatTime,
          [
            dateTime,
            position,
          ],
        ),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, _i12.Shalat>>.value(
            _FakeEither_0<_i11.Failure, _i12.Shalat>(
          this,
          Invocation.method(
            #getShalatTime,
            [
              dateTime,
              position,
            ],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i12.Shalat>>);
}

/// A class which mocks [SurahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRepository extends _i1.Mock implements _i8.SurahRepository {
  MockSurahRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>> getAllSurah() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSurah,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>>.value(
                _FakeEither_0<_i11.Failure, List<_i14.Surah>>(
          this,
          Invocation.method(
            #getAllSurah,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>>);
  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>> getSurahByQuery(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahByQuery,
          [query],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>>.value(
                _FakeEither_0<_i11.Failure, List<_i14.Surah>>(
          this,
          Invocation.method(
            #getSurahByQuery,
            [query],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i14.Surah>>>);
  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i15.SurahDetail>>>
      getAyahBySurahNumber(int? surahNumber) => (super.noSuchMethod(
            Invocation.method(
              #getAyahBySurahNumber,
              [surahNumber],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i15.SurahDetail>>>.value(
                _FakeEither_0<_i11.Failure, List<_i15.SurahDetail>>(
              this,
              Invocation.method(
                #getAyahBySurahNumber,
                [surahNumber],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i15.SurahDetail>>>);
  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i16.DailyPray>>> getDailyPray() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailyPray,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i16.DailyPray>>>.value(
                _FakeEither_0<_i11.Failure, List<_i16.DailyPray>>(
          this,
          Invocation.method(
            #getDailyPray,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i16.DailyPray>>>);
  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>>
      getAsmaulHusna() => (super.noSuchMethod(
            Invocation.method(
              #getAsmaulHusna,
              [],
            ),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>>.value(
                _FakeEither_0<_i11.Failure, List<_i17.AsmaulHusna>>(
              this,
              Invocation.method(
                #getAsmaulHusna,
                [],
              ),
            )),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>>);
}

/// A class which mocks [ShalatLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockShalatLocalDataSource extends _i1.Mock
    implements _i18.ShalatLocalDataSource {
  MockShalatLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i12.Shalat?> getShalatTime(
    DateTime? dateTime,
    _i13.Position? position,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShalatTime,
          [
            dateTime,
            position,
          ],
        ),
        returnValue: _i10.Future<_i12.Shalat?>.value(),
      ) as _i10.Future<_i12.Shalat?>);
  @override
  _i10.Future<_i12.Shalat?> getShalatTimeByDate(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShalatTimeByDate,
          [date],
        ),
        returnValue: _i10.Future<_i12.Shalat?>.value(),
      ) as _i10.Future<_i12.Shalat?>);
  @override
  _i10.Future<String> insertOrUpdateShalat(List<_i12.Shalat>? shalat) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateShalat,
          [shalat],
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
}

/// A class which mocks [ShalatRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockShalatRemoteDataSource extends _i1.Mock
    implements _i19.ShalatRemoteDataSource {
  MockShalatRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i3.ShalatTimeResponse> getShalatTime(
    DateTime? dateTime,
    _i13.Position? position,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShalatTime,
          [
            dateTime,
            position,
          ],
        ),
        returnValue:
            _i10.Future<_i3.ShalatTimeResponse>.value(_FakeShalatTimeResponse_1(
          this,
          Invocation.method(
            #getShalatTime,
            [
              dateTime,
              position,
            ],
          ),
        )),
      ) as _i10.Future<_i3.ShalatTimeResponse>);
}

/// A class which mocks [SurahLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahLocalDataSource extends _i1.Mock
    implements _i20.SurahLocalDataSource {
  MockSurahLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i14.Surah>> getAllSurah() => (super.noSuchMethod(
        Invocation.method(
          #getAllSurah,
          [],
        ),
        returnValue: _i10.Future<List<_i14.Surah>>.value(<_i14.Surah>[]),
      ) as _i10.Future<List<_i14.Surah>>);
  @override
  _i10.Future<_i4.AsmaulHusnaResponse> getAsmaulHusna() => (super.noSuchMethod(
        Invocation.method(
          #getAsmaulHusna,
          [],
        ),
        returnValue: _i10.Future<_i4.AsmaulHusnaResponse>.value(
            _FakeAsmaulHusnaResponse_2(
          this,
          Invocation.method(
            #getAsmaulHusna,
            [],
          ),
        )),
      ) as _i10.Future<_i4.AsmaulHusnaResponse>);
  @override
  _i10.Future<List<_i14.Surah>> getSurahByQuery(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahByQuery,
          [query],
        ),
        returnValue: _i10.Future<List<_i14.Surah>>.value(<_i14.Surah>[]),
      ) as _i10.Future<List<_i14.Surah>>);
  @override
  _i10.Future<String> insertOrUpdateSurah(List<_i14.Surah>? listSurah) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateSurah,
          [listSurah],
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<String> insertOrUpdateAyah(List<_i15.SurahDetail>? listAyah) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateAyah,
          [listAyah],
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<_i5.DataDailyPrayResponse> getDailyPray() => (super.noSuchMethod(
        Invocation.method(
          #getDailyPray,
          [],
        ),
        returnValue: _i10.Future<_i5.DataDailyPrayResponse>.value(
            _FakeDataDailyPrayResponse_3(
          this,
          Invocation.method(
            #getDailyPray,
            [],
          ),
        )),
      ) as _i10.Future<_i5.DataDailyPrayResponse>);
  @override
  _i10.Future<List<_i15.SurahDetail>> getAyahBySurahNumber(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAyahBySurahNumber,
          [surahNumber],
        ),
        returnValue:
            _i10.Future<List<_i15.SurahDetail>>.value(<_i15.SurahDetail>[]),
      ) as _i10.Future<List<_i15.SurahDetail>>);
}

/// A class which mocks [SurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRemoteDataSource extends _i1.Mock
    implements _i21.SurahRemoteDataSource {
  MockSurahRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i6.ListSurah> getAllSurah() => (super.noSuchMethod(
        Invocation.method(
          #getAllSurah,
          [],
        ),
        returnValue: _i10.Future<_i6.ListSurah>.value(_FakeListSurah_4(
          this,
          Invocation.method(
            #getAllSurah,
            [],
          ),
        )),
      ) as _i10.Future<_i6.ListSurah>);
  @override
  _i10.Future<_i7.SurahDetailResponse> getAyahBySurahNumber(int? number) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAyahBySurahNumber,
          [number],
        ),
        returnValue: _i10.Future<_i7.SurahDetailResponse>.value(
            _FakeSurahDetailResponse_5(
          this,
          Invocation.method(
            #getAyahBySurahNumber,
            [number],
          ),
        )),
      ) as _i10.Future<_i7.SurahDetailResponse>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i22.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Stream<_i23.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i10.Stream<_i23.ConnectivityResult>.empty(),
      ) as _i10.Stream<_i23.ConnectivityResult>);
  @override
  _i10.Future<_i23.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i10.Future<_i23.ConnectivityResult>.value(
            _i23.ConnectivityResult.bluetooth),
      ) as _i10.Future<_i23.ConnectivityResult>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i24.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i25.Isar?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i10.Future<_i25.Isar?>.value(),
      ) as _i10.Future<_i25.Isar?>);
  @override
  _i10.Future<_i12.Shalat?> getShalatTime(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getShalatTime,
          [id],
        ),
        returnValue: _i10.Future<_i12.Shalat?>.value(),
      ) as _i10.Future<_i12.Shalat?>);
  @override
  _i10.Future<_i12.Shalat?> getShalatTimeByDate(String? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShalatTimeByDate,
          [date],
        ),
        returnValue: _i10.Future<_i12.Shalat?>.value(),
      ) as _i10.Future<_i12.Shalat?>);
  @override
  _i10.Future<void> insertOrUpdateShalat(List<_i12.Shalat>? shalat) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateShalat,
          [shalat],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i14.Surah>> getAllSurah() => (super.noSuchMethod(
        Invocation.method(
          #getAllSurah,
          [],
        ),
        returnValue: _i10.Future<List<_i14.Surah>>.value(<_i14.Surah>[]),
      ) as _i10.Future<List<_i14.Surah>>);
  @override
  _i10.Future<List<_i15.SurahDetail>> getAyahBySurahNumber(int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAyahBySurahNumber,
          [surahNumber],
        ),
        returnValue:
            _i10.Future<List<_i15.SurahDetail>>.value(<_i15.SurahDetail>[]),
      ) as _i10.Future<List<_i15.SurahDetail>>);
  @override
  _i10.Future<void> insertOrUpdateSurah(List<_i14.Surah>? listSurah) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateSurah,
          [listSurah],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> insertOrUpdateAyah(List<_i15.SurahDetail>? listAyah) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateAyah,
          [listAyah],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i14.Surah>> getSurahByQuery(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahByQuery,
          [query],
        ),
        returnValue: _i10.Future<List<_i14.Surah>>.value(<_i14.Surah>[]),
      ) as _i10.Future<List<_i14.Surah>>);
}

/// A class which mocks [GetAsmaulHusnaUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAsmaulHusnaUsecase extends _i1.Mock
    implements _i26.GetAsmaulHusnaUsecase {
  MockGetAsmaulHusnaUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.SurahRepository get surahRepository => (super.noSuchMethod(
        Invocation.getter(#surahRepository),
        returnValue: _FakeSurahRepository_6(
          this,
          Invocation.getter(#surahRepository),
        ),
      ) as _i8.SurahRepository);
  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>> invoke() =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>>.value(
                _FakeEither_0<_i11.Failure, List<_i17.AsmaulHusna>>(
          this,
          Invocation.method(
            #invoke,
            [],
          ),
        )),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i17.AsmaulHusna>>>);
}
